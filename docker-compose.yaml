services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: web-gallery-backend
    ports:
      - "3000:${PORT}"
    environment:
      - PORT=${PORT}
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:${MINIO_PORT}}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-${MINIO_ROOT_USER}}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-${MINIO_ROOT_PASSWORD}}
      - S3_BUCKET=${S3_BUCKET:-web-gallery}
      - S3_REGION=${S3_REGION:-eu-west-1}
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:${PORT}/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    depends_on:
      - minio
    networks:
      - web-gallery-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: web-gallery-minio
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_API_PORT}:${MINIO_PORT}"   # API
      - "${MINIO_CONSOLE_PORT}:9001"   # Console Web
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - web-gallery-network

volumes:
  minio_data:
    driver: local

networks:
  web-gallery-network:
    driver: bridge