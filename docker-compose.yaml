version: '3.8'

services:
  # ===================================
  # FRONTEND SERVICE (React Router v7 - Static)
  # ===================================
  frontend:
    build:
      context: ./web-frontend
      dockerfile: Dockerfile
      args:
        - VITE_SUPABASE_URL=${SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
        - VITE_API_URL=http://localhost:${BACKEND_PUBLIC_PORT:-3000}
        - VITE_S3_ENDPOINT=http://localhost:${MINIO_API_PORT:-9000}
    container_name: web-gallery-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      start_period: 10s
      retries: 3
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - web-gallery-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_DOMAIN:-localhost}`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # ===================================
  # BACKEND SERVICE (Node.js/Express)
  # ===================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: web-gallery-backend
    ports:
      - "${BACKEND_PUBLIC_PORT:-3000}:${PORT:-3000}"
    environment:
      - PORT=${PORT:-3000}
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3001}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:${MINIO_PORT:-9000}}
      - S3_PUBLIC_ENDPOINT=${S3_PUBLIC_ENDPOINT:-http://localhost:${MINIO_API_PORT:-9000}}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-${MINIO_ROOT_USER:-minioadmin}}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-${MINIO_ROOT_PASSWORD:-minioadmin}}
      - S3_BUCKET=${S3_BUCKET:-web-gallery}
      - S3_REGION=${S3_REGION:-eu-west-1}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE:-true}
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:${PORT:-3000}/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 3s
      timeout: 3s
      retries: 6
    depends_on:
      - minio
    networks:
      - web-gallery-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${BACKEND_DOMAIN:-api.localhost}`) || PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=${PORT:-3000}"

  # ===================================
  # MINIO SERVICE (S3-compatible storage)
  # ===================================
  minio:
    image: minio/minio:latest
    container_name: web-gallery-minio
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_API_PORT:-9000}:${MINIO_PORT:-9000}"   # API
      - "${MINIO_CONSOLE_PORT:-9001}:9001"             # Console Web
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL:-http://localhost:9001}
    volumes:
      - minio_data:/data
    networks:
      - web-gallery-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`${MINIO_DOMAIN:-minio.localhost}`)"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`${MINIO_CONSOLE_DOMAIN:-minio-console.localhost}`)"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"

  # ===================================
  # NGINX REVERSE PROXY (Optional)
  # ===================================
  nginx:
    image: nginx:alpine
    container_name: web-gallery-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - web-gallery-network
    restart: unless-stopped
    profiles:
      - "with-nginx"

# ===================================
# VOLUMES
# ===================================
volumes:
  minio_data:
    driver: local
    labels:
      - "project=web-gallery"
      - "service=minio"

# ===================================
# NETWORKS
# ===================================
networks:
  web-gallery-network:
    driver: bridge
    labels:
      - "project=web-gallery"